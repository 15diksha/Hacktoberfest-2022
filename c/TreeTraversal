#include<stdio.h>
#include<malloc.h>
#include<stdlib.h> 
struct node 
{
    int data ;
    struct node *right;
    struct node *left ;
};
struct node *create(int data)
{
    struct node * n;
    n=(struct node*)malloc(sizeof(struct node));
    n->data =   data ;
    n->left= NULL ;
    n->right = NULL ;
    return n ;
}
void preOrder(struct node * root) 
{
    
    if(root != NULL)
    {
        printf("%d ",root->data);
        preOrder(root->left);
        preOrder(root->right);
    }
}
void postOrder( struct node *root)
{
    
    if(root != NULL)
    {
        postOrder(root->left);
        postOrder(root->right);
        printf("%d ",root->data);
    }
}
void inOrder(struct node *root)
{
    
    if(root != NULL)
    {
        inOrder(root->left);
        printf("%d ",root->data);
        inOrder(root->right);
    }
}
int isBST(struct node *root)
{
    static struct node *prev=NULL ;
    if(root!=NULL)
    {
        if(!isBST(root->left))
        {
            return 0 ;
        }
        if(prev!=NULL && root->data<=prev->data)
        {
            return 0 ;
        }
        prev=root ;
        return isBST(root->right) ;
    }
    else
    {
        return 1 ;
    }
}

int main()
{
 int ch,choice=1 ;
 struct node *p=  create(7);
 struct node *p1= create(11);
 struct node *p2= create(6);
 //struct node *p3=create(1);
 //struct node *p4=create(4);
 
 p->left=p1 ;
 p->right=p2 ;
// p1->left=p3 ;
// p1->right = p4 ;
 
 int index=isBST(p) ;
 if(index==1) 
 {
     printf("Tree is a BST\n") ;
 }
 else
 {
     printf("tree is not a bst\n") ;
 }
 do
 {
     printf("1:INORDER TRAVERSAL\n") ;
     printf("2:POSTORDER TRAVERSAL\n") ;
     printf("3:PREORDER TRAVERSAL\n") ;
     printf("4:QUIT\n") ;
     printf("Enter your choice\n") ;
     scanf("%d",&ch) ;
     switch(ch)
     {
         case 1 : printf("InOrder Traversal of the binary tree is:\n") ;
                  inOrder(p) ;
                  break ;
         case 2 : printf("PostOrder Traversal of the binary tree is:\n") ;
                  postOrder(p) ;
                  break ;
         case 3 : printf("PreOrder Traversal of the binary tree is:\n") ;
                  preOrder(p) ;
                  break ;
         case 4 : exit(1) ;
     }
     printf("\n") ;
 }while(ch<=4) ;
 
 return 0 ; 
}


