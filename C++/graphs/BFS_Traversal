#include <iostream>
#include <bits/stdc++.h>
using namespace std;

void BFS(int** edges, int n, int sv, bool* visited) {
    if(n == 0)
        return;
    visited[sv] = true;
    queue<int> q;
    q.push(sv);
   
    while(!q.empty()) {
        int front = q.front();
        q.pop();
        cout<<front<<" ";
        //visited[front] = true;
        for(int i=0;i<n;i++) {
            if(i!=front && !visited[i] && edges[front][i] == 1){
                q.push(i);
                visited[i] = true;
            }
        }
    }
    
    for(int i=0;i<n;i++) {
        if(!visited[i]) {
            BFS(edges, n, i, visited);
        }
    }
}

int main() {
    // Write your code here
    int n, e;
    cin>>n>>e;
    
    int** edges = new int*[n];
    
    for(int i=0;i<n;i++) {
        edges[i] = new int[n];
        for(int j=0;j<n;j++){
            edges[i][j] = 0;
        }
    }
    
    for(int i=0;i<e;i++) {
        int f,s;
        cin>>f>>s;
        edges[f][s] = 1;
        edges[s][f] = 1;
    }
    
    bool* visited = new bool[n];
    
    for(int i=0;i<n;i++){
        visited[i] = false;
    }
    
    BFS(edges, n, 0, visited);
    
    return 0;
}
