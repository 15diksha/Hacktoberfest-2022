#include<iostream>
using namespace std;
class Time {
	int hours;
	int minutes;
	int seconds;
public:
	Time() :hours(0), minutes(0), seconds(0) {} //default constructor
	Time(int h, int m, int s) : hours(h), minutes(m), seconds(s) {} //parametrized constructor
	Time(const Time& obj) : hours(obj.hours), minutes(obj.minutes), seconds(obj.seconds) {} //copy constructor
	~Time()	{} //destructor
	void setData(int h,int m,int s){
		hours = h;
		minutes = m;
		seconds = s;
	}
	void print() {
		cout << hours << ":" << minutes << ":" << seconds << endl;
	}
	void advance(int h, int m, int s) {
		if (seconds + s > 59){
			minutes++;
		}
		if (minutes + m > 59){
			hours++;
		}
		hours = (hours + h) % 24;
		minutes = (minutes + m) % 60;
		seconds = (seconds + s) % 60;
	}
	void reset(int h, int m, int s) {
		hours = h % 24;
	 	minutes = m;
		seconds = s;
	}
};
void input(Time& a, const int& n) {
	static int h, m, s;
	if (n == 1 || n == 2){
		cout << endl;
		do {
			cout << "Enter hours   : ";
			cin >> h;
			cout << "Enter Minutes : ";
			cin >> m;
			cout << "Enter seconds : ";
			cin >> s;
			if (h < 0 || m < 0 || s < 0 || m>59 || s>59) {
				cout << "ERROR: INVALID INPUT! INPUT AGAIN >>\n";
			}
		} while (h < 0 || m < 0 || s < 0 || m>59 || s>59);
	}
	if (n == 1)
		a.setData(h, m, s);
	if (n == 2)	
		a.advance(h, m, s);
	if (n == 0)
		a.reset(h, m, s);
}
int main(){
	Time a;

	input(a, 1);
	cout << "\nFirst Time   : ";
	a.print();

	input(a, 2);
	cout << "\nAdvance Time : ";
	a.print();

	input(a, 0);
	cout << "\nReset Time   : ";
	a.print();

	return 0;
}
